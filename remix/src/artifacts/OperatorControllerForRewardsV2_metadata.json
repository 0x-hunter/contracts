{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeSharingSystem",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_feeSharingSetter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenSplitter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_teamVesting",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasuryVesting",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tradingRewardsDistributor",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "canRelease",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "releaseTokensAndUpdateRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_feeSharingSetter": "address of the fee sharing setter contract",
						"_feeSharingSystem": "address of the fee sharing system contract",
						"_teamVesting": "address of the team vesting contract",
						"_tokenSplitter": "address of the token splitter contract",
						"_tradingRewardsDistributor": "address of the trading rewards distributor contract",
						"_treasuryVesting": "address of the treasury vesting contract"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "OperatorControllerForRewardsV2",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"canRelease()": {
					"notice": "It verifies that the lastUpdateBlock is greater than endBlock"
				},
				"constructor": {
					"notice": "Constructor"
				},
				"releaseTokensAndUpdateRewards()": {
					"notice": "Release HTGs tokens from the TokenSplitter and update fee-sharing rewards"
				}
			},
			"notice": "It splits pending HTGs and updates trading rewards.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/OperatorControllerForRewardsV2.sol": "OperatorControllerForRewardsV2"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"src/OperatorControllerForRewardsV2.sol": {
			"keccak256": "0x3f774e69cf62a1294f6e7c7a9ef4236d0fd5b10be449ab150cf6532b9e821a8d",
			"license": "MIT",
			"urls": [
				"bzz-raw://3bccd9d0637dcc7c86ea6ca7166cfa05d2d5a7f8a18cb0afd0fe53a53a1e0626",
				"dweb:/ipfs/Qmcsd7aVnZNM6x7pHJZVnZZmWHV61i4CEQgNiJF3TNyeFi"
			]
		}
	},
	"version": 1
}